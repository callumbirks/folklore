[package]
name = "folklore"
version = "0.3.0"
edition = "2021"
license = "MIT"
repository = "https://github.com/callumbirks/folklore/"
description = "A lock-less concurrent hash map"
categories = ["concurrency", "data-structures", "no-std"]
keywords = ["hashmap", "map", "lock-free", "concurrent"]

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
hash32 = "0.3.1"
bytemuck = "1.14.3"
thread_local = "1.1.8"
# Disabling default-features disables the spinlock fallback, so atomic reads and writes will always be lock-free
atomic = { version = "0.6.0", default-features = false }

[dev-dependencies]
fixedstr = "0.5.5"
criterion = "0.5.1"
rand = "0.8.5"
leapfrog = { version = "0.3.0", features = ["stable_alloc"] }

[[bench]]
name = "hashmap"
harness = false

[[bench]]
name = "parallel"
harness = false

[profile.bench]
codegen-units = 1
lto = false

[lints.clippy]
pedantic = { priority = -1, level = "deny" }
module_name_repetitions = "allow"
